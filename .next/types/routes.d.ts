// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/about" | "/admin" | "/blog/[slug]" | "/blog/[slug]/edit" | "/contactus" | "/dashboard" | "/feed" | "/home" | "/notification" | "/postblog" | "/profile" | "/profile/[id]" | "/settings" | "/users"
type AppRouteHandlerRoutes = "/api/auth/[...nextauth]" | "/api/blogs" | "/api/blogs/[slug]" | "/api/blogs/[slug]/comments" | "/api/blogs/feed" | "/api/blogs/published" | "/api/blogs/search" | "/api/blogs/unpublished" | "/api/blogs/user/[id]" | "/api/comments" | "/api/contact" | "/api/posts" | "/api/posts/[slug]" | "/api/posts/[slug]/comments" | "/api/users" | "/api/users/follow" | "/api/users/unfollow"
type PageRoutes = never
type LayoutRoutes = "/"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/about": {}
  "/admin": {}
  "/api/auth/[...nextauth]": { "nextauth": string[]; }
  "/api/blogs": {}
  "/api/blogs/[slug]": { "slug": string; }
  "/api/blogs/[slug]/comments": { "slug": string; }
  "/api/blogs/feed": {}
  "/api/blogs/published": {}
  "/api/blogs/search": {}
  "/api/blogs/unpublished": {}
  "/api/blogs/user/[id]": { "id": string; }
  "/api/comments": {}
  "/api/contact": {}
  "/api/posts": {}
  "/api/posts/[slug]": { "slug": string; }
  "/api/posts/[slug]/comments": { "slug": string; }
  "/api/users": {}
  "/api/users/follow": {}
  "/api/users/unfollow": {}
  "/blog/[slug]": { "slug": string; }
  "/blog/[slug]/edit": { "slug": string; }
  "/contactus": {}
  "/dashboard": {}
  "/feed": {}
  "/home": {}
  "/notification": {}
  "/postblog": {}
  "/profile": {}
  "/profile/[id]": { "id": string; }
  "/settings": {}
  "/users": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
